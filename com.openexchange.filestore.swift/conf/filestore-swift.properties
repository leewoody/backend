# Configuration file for Swift file storages
# NOTE: The Swift connector is currently in beta status and not yet officially supported.


# This file provides the configuration of all file storages based on the
# OpenStack Swift API. Each connected storage is identified by a "filestore ID",
# which refers to the authority part of the URI configured  in the "uri" column
# in the "filestore" table of the config database
# (previously registered using "./registerfilestore -t [filestoreID]").
#
# For each configured filestore, an own set of the properties may be defined,
# replacing [filestoreID] with the actual identifier. Refer to the following
# template for available configuration options, or further down for a simple
# example.


# == Template ================================================================

# Specifies the configuration type to apply. Either "manual" or "region".
#
#  - "manual" requires to manually specify the end-points to use
#
#  - "region" auto-detects the end-points based on the authentication response,
#    but requires Identity API v3.0 to be set for "authType" property
#
# Required.
#
# Default: manual
com.openexchange.filestore.swift.[filestoreID].configType=manual



# Specifies the protocol to be used for network communication (http or https)
# Only considered if "configType" is set to "manual"
# Required.
#
# Default: https
com.openexchange.filestore.swift.[filestoreID].protocol=https

# Specifies the API end-point pairs to be used. At least one host must be provided.
# Multiple hosts can be specified as comma-separated list; e.g. "my1.clouddrive.invalid, my2.clouddrive.invalid"
# Only considered if "configType" is set to "manual"
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].hosts=

# The path consisting of API version, tenant identifier and container name; e.g. "/v1/MyFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/MyContainer"
# Only considered if "configType" is set to "manual"
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].path=



# Specifies the interface name to use when looking up the appropriate end-points
# Only considered if "configType" is set to "region"
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].interface=

# Specifies the region name to use when looking up the appropriate end-points
# Only considered if "configType" is set to "region"
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].region=

# Specifies the container name to append when looking up the appropriate end-points in order to build the full URL.
# Only considered if "configType" is set to "region"
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].containerName=



# Specifies the user name to use for authentication.
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].userName=

# Specifies the authentication type & value to use for authentication against Identity API;
# see http://developer.openstack.org/api-ref-identity-v2.html and http://developer.openstack.org/api-ref-identity-v3.html respectively
# Required.
#
# Password-based authentication against Identity API v2.0:
#  com.openexchange.filestore.swift.myswift.authType=password.v2
#  com.openexchange.filestore.swift.myswift.authValue=mysecret
#
# Password-based authentication against Identity API v3.0:
#  com.openexchange.filestore.swift.myswift.authType=password.v3
#  com.openexchange.filestore.swift.myswift.authValue=mysecret
#
# Rackspace API-key authentication:
#  com.openexchange.filestore.swift.myswift.authType=raxkey
#  com.openexchange.filestore.swift.myswift.authValue=myrackspaceapikey
#
# No default value
com.openexchange.filestore.swift.[filestoreID].authType=
com.openexchange.filestore.swift.[filestoreID].authValue=

# Specifies the tenant name to use for authentication. Only needed if "authType" is set to "password.v2"
#
# No default value
com.openexchange.filestore.swift.[filestoreID].tenantName=

# The domain identifier for the Identity API v3.0 end-point. Only needed if "authType" is set to "password.v3"
#
# No default value.
com.openexchange.filestore.swift.[filestoreID].domain=

# The URL for the Identity API v2.0 end-point; e.g. "https://identity.api.mycloud.invalid/v2.0/tokens"
# Not needed in case "authType" is set to "raxkey" (implicitly set to "https://identity.api.rackspacecloud.com/v2.0/tokens").
# Required (for "authType" different from "raxkey")
#
# No default value.
com.openexchange.filestore.swift.[filestoreID].identityUrl=

# The max. number of concurrent HTTP connections that may be established with the swift
# endpoints. If you have specified more than one hosts, this setting should be configured
# so that maxConnectionsPerHost < maxConnections <= n * maxConnectionsPerHost.
#
# Default: 100
com.openexchange.filestore.swift.[filestoreID].maxConnections=100

# The max. number of concurrent HTTP connections that may be established with a certain
# swift endpoint.
#
# Default: 100
com.openexchange.filestore.swift.[filestoreID].maxConnectionsPerHost=100

# The connection timeout in milliseconds. If establishing a new HTTP connection to a certain
# host, it is blacklisted until it is considered available again. A periodic heartbeat task
# that tries to read the namespace configuration (<protocol>://<host>/<path>/.conf) decides
# whether an endpoint is considered available again.
#
# Default: 5000
com.openexchange.filestore.swift.[filestoreID].connectionTimeout=5000

# The socket read timeout in milliseconds. If waiting for the next expected TCP packet exceeds
# this value, the host is blacklisted until it is considered available again. A periodic heartbeat
# task that tries to read the namespace configuration (<protocol>://<host>/<path>/.conf) decides
# whether an endpoint is considered available again.
#
# Default: 15000
com.openexchange.filestore.swift.[filestoreID].socketReadTimeout=15000

# Hosts can get blacklisted if the client considers them to be unavailable. All hosts on the
# blacklist are checked periodically if they are available again and are then removed from the
# blacklist if so. A host is considered available again if the namespace configuration file
# (<protocol>://<host>/<path>/.conf) can be requested without any error. This setting specifies
# the interval in milliseconds between two heartbeat runs. The above specified timeouts must be
# taken into account for specifying a decent value, as every heartbeat run might block until a
# timeout happens for every still unavailable host.
#
# Default: 60000
com.openexchange.filestore.swift.[filestoreID].heartbeatInterval=60000


# == Specific File Stores go here ============================================

# As an example, the following lines configure a Rackspace Cloud Files object store
# accessible via "https://storage101.fake.clouddrive.invalid/v1/MossoCloudFS_123456/MyContainer",
# referenced by the URI "swift://mycloudfiles" in the configuration database,
# previously registered using "./registerfilestore -t swift://mycloudfiles":

# com.openexchange.filestore.swift.mycloudfiles.configType=manual
# com.openexchange.filestore.swift.mycloudfiles.protocol=https
# com.openexchange.filestore.swift.mycloudfiles.hosts=storage101.fake.clouddrive.invalid
# com.openexchange.filestore.swift.mycloudfiles.path=/v1/MossoCloudFS_123456/MyContainer
# com.openexchange.filestore.swift.mycloudfiles.userName=jane.doe
# com.openexchange.filestore.swift.mycloudfiles.authType=raxkey
# com.openexchange.filestore.swift.mycloudfiles.authValue=123dabf5784b4f59aec9409fd1d4c456
# com.openexchange.filestore.swift.mycloudfiles.maxConnections=100
# com.openexchange.filestore.swift.mycloudfiles.maxConnectionsPerHost=100
# com.openexchange.filestore.swift.mycloudfiles.connectionTimeout=1000
# com.openexchange.filestore.swift.mycloudfiles.socketReadTimeout=1000
# com.openexchange.filestore.swift.mycloudfiles.heartbeatInterval=10000


# As another example, the following lines configure a regular Swift object store
# accessible via "http://my.swiftbox.invalid:8080/v1/AUTH_08c6dedf1fa746de948ca3f32555810d/MyContainer",
# referenced by the URI "swift://myswiftbox" in the configuration database,
# previously registered using "./registerfilestore -t swift://myswiftbox":

# com.openexchange.filestore.swift.myswiftbox.configType=manual
# com.openexchange.filestore.swift.myswiftbox.protocol=http
# com.openexchange.filestore.swift.myswiftbox.hosts=my.swiftbox.invalid:8080
# com.openexchange.filestore.swift.myswiftbox.path=/v1/AUTH_08c6dedf1fa746de948ca3f32555810d/MyContainer
# com.openexchange.filestore.swift.myswiftbox.userName=admin
# com.openexchange.filestore.swift.myswiftbox.tenantName=admin
# com.openexchange.filestore.swift.myswiftbox.authType=password.v3
# com.openexchange.filestore.swift.myswiftbox.authValue=devstacker
# com.openexchange.filestore.swift.myswiftbox.domain=default
# com.openexchange.filestore.swift.myswiftbox.identityUrl=http://my.swiftbox.invalid:5000/v2.0/tokens
# com.openexchange.filestore.swift.myswiftbox.maxConnections=100
# com.openexchange.filestore.swift.myswiftbox.maxConnectionsPerHost=100
# com.openexchange.filestore.swift.myswiftbox.connectionTimeout=1000
# com.openexchange.filestore.swift.myswiftbox.socketReadTimeout=1000
# com.openexchange.filestore.swift.myswiftbox.heartbeatInterval=10000

# com.openexchange.filestore.swift.myswiftbox2.configType=region
# com.openexchange.filestore.swift.myswiftbox2.interface=public
# com.openexchange.filestore.swift.myswiftbox2.region=PublicOne
# com.openexchange.filestore.swift.myswiftbox2.containerName=MyContainer
# com.openexchange.filestore.swift.myswiftbox2.userName=admin
# com.openexchange.filestore.swift.myswiftbox2.tenantName=admin
# com.openexchange.filestore.swift.myswiftbox2.authType=password.v3
# com.openexchange.filestore.swift.myswiftbox2.authValue=devstacker
# com.openexchange.filestore.swift.myswiftbox2.domain=default
# com.openexchange.filestore.swift.myswiftbox2.identityUrl=http://my.swiftbox.invalid:5000/v2.0/tokens
# com.openexchange.filestore.swift.myswiftbox2.maxConnections=100
# com.openexchange.filestore.swift.myswiftbox2.maxConnectionsPerHost=100
# com.openexchange.filestore.swift.myswiftbox2.connectionTimeout=1000
# com.openexchange.filestore.swift.myswiftbox2.socketReadTimeout=1000
# com.openexchange.filestore.swift.myswiftbox2.heartbeatInterval=10000
