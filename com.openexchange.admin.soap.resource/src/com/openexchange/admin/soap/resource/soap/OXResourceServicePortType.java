package com.openexchange.admin.soap.resource.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2012-06-01T18:56:00.622+02:00
 * Generated source version: 2.6.0
 *
 */
@WebService(targetNamespace = "http://soap.admin.openexchange.com", name = "OXResourceServicePortType")
@XmlSeeAlso({com.openexchange.admin.soap.resource.exceptions.ObjectFactory.class, ObjectFactory.class, com.openexchange.admin.soap.resource.rmi.ObjectFactory.class, com.openexchange.admin.soap.resource.io.ObjectFactory.class, com.openexchange.admin.soap.resource.dataobjects.ObjectFactory.class})
public interface OXResourceServicePortType {

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:change", output = "urn:changeResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:changeStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:changeInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:changeInvalidDataException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:changeNoSuchContextException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:changeRemoteException"), @FaultAction(className = NoSuchResourceException_Exception.class, value = "urn:changeNoSuchResourceException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:changeDatabaseUpdateException")})
    @WebMethod(action = "urn:change")
    public void change(
        @WebParam(partName = "parameters", name = "change", targetNamespace = "http://soap.admin.openexchange.com")
        Change parameters
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, NoSuchContextException_Exception, RemoteException_Exception, NoSuchResourceException_Exception, DatabaseUpdateException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:listAll", output = "urn:listAllResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:listAllStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:listAllInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:listAllInvalidDataException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:listAllNoSuchContextException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:listAllRemoteException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:listAllDatabaseUpdateException")})
    @RequestWrapper(localName = "listAll", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.ListAll")
    @WebMethod(action = "urn:listAll")
    @ResponseWrapper(localName = "listAllResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.ListAllResponse")
    public java.util.List<com.openexchange.admin.soap.resource.dataobjects.Resource> listAll(
        @WebParam(name = "ctx", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Context ctx,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Credentials auth
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, NoSuchContextException_Exception, RemoteException_Exception, DatabaseUpdateException_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:delete", output = "urn:deleteResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:deleteStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:deleteInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:deleteInvalidDataException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:deleteNoSuchContextException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:deleteRemoteException"), @FaultAction(className = NoSuchResourceException_Exception.class, value = "urn:deleteNoSuchResourceException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:deleteDatabaseUpdateException")})
    @WebMethod(action = "urn:delete")
    public void delete(
        @WebParam(partName = "parameters", name = "delete", targetNamespace = "http://soap.admin.openexchange.com")
        Delete parameters
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, NoSuchContextException_Exception, RemoteException_Exception, NoSuchResourceException_Exception, DatabaseUpdateException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:getMultipleData", output = "urn:getMultipleDataResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:getMultipleDataStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:getMultipleDataInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:getMultipleDataInvalidDataException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:getMultipleDataNoSuchContextException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:getMultipleDataRemoteException"), @FaultAction(className = NoSuchResourceException_Exception.class, value = "urn:getMultipleDataNoSuchResourceException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:getMultipleDataDatabaseUpdateException")})
    @RequestWrapper(localName = "getMultipleData", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.GetMultipleData")
    @WebMethod(action = "urn:getMultipleData")
    @ResponseWrapper(localName = "getMultipleDataResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.GetMultipleDataResponse")
    public java.util.List<com.openexchange.admin.soap.resource.dataobjects.Resource> getMultipleData(
        @WebParam(name = "ctx", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Context ctx,
        @WebParam(name = "resources", targetNamespace = "http://soap.admin.openexchange.com")
        java.util.List<com.openexchange.admin.soap.resource.dataobjects.Resource> resources,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Credentials auth
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, NoSuchContextException_Exception, RemoteException_Exception, NoSuchResourceException_Exception, DatabaseUpdateException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:create", output = "urn:createResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:createStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:createInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:createInvalidDataException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:createNoSuchContextException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:createRemoteException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:createDatabaseUpdateException")})
    @RequestWrapper(localName = "create", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.Create")
    @WebMethod(action = "urn:create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.CreateResponse")
    public com.openexchange.admin.soap.resource.dataobjects.Resource create(
        @WebParam(name = "ctx", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Context ctx,
        @WebParam(name = "res", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Resource res,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Credentials auth
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, NoSuchContextException_Exception, RemoteException_Exception, DatabaseUpdateException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:list", output = "urn:listResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:listStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:listInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:listInvalidDataException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:listNoSuchContextException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:listRemoteException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:listDatabaseUpdateException")})
    @RequestWrapper(localName = "list", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.List")
    @WebMethod(action = "urn:list")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.ListResponse")
    public java.util.List<com.openexchange.admin.soap.resource.dataobjects.Resource> list(
        @WebParam(name = "ctx", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Context ctx,
        @WebParam(name = "pattern", targetNamespace = "http://soap.admin.openexchange.com")
        java.lang.String pattern,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Credentials auth
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, NoSuchContextException_Exception, RemoteException_Exception, DatabaseUpdateException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:getData", output = "urn:getDataResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:getDataStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:getDataInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:getDataInvalidDataException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:getDataNoSuchContextException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:getDataRemoteException"), @FaultAction(className = NoSuchResourceException_Exception.class, value = "urn:getDataNoSuchResourceException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:getDataDatabaseUpdateException")})
    @RequestWrapper(localName = "getData", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.GetData")
    @WebMethod(action = "urn:getData")
    @ResponseWrapper(localName = "getDataResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.resource.soap.GetDataResponse")
    public com.openexchange.admin.soap.resource.dataobjects.Resource getData(
        @WebParam(name = "ctx", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Context ctx,
        @WebParam(name = "res", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Resource res,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.resource.dataobjects.Credentials auth
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, NoSuchContextException_Exception, RemoteException_Exception, NoSuchResourceException_Exception, DatabaseUpdateException_Exception;
}
