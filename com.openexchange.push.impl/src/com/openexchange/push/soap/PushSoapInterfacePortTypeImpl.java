
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.openexchange.push.soap;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import com.openexchange.auth.Credentials;
import com.openexchange.exception.OXException;
import com.openexchange.push.impl.PushManagerRegistry;
import com.openexchange.server.ServiceLookup;

/**
 * This class was generated by Apache CXF 2.7.12
 * 2015-09-02T13:11:52.497+02:00
 * Generated source version: 2.7.12
 *
 */

@javax.jws.WebService(serviceName = "PushSoapInterface", portName = "PushSoapInterfaceHttpSoap12Endpoint", targetNamespace = "http://soap.push.openexchange.com",
// wsdlLocation = "null",
endpointInterface = "com.openexchange.push.soap.PushSoapInterfacePortType")

public class PushSoapInterfacePortTypeImpl implements PushSoapInterfacePortType {

    private final ServiceLookup services;

    /**
     * Initializes a new {@link PushSoapInterfacePortTypeImpl}.
     */
    public PushSoapInterfacePortTypeImpl(ServiceLookup services) {
        super();
        this.services = services;
    }

    private void authenticate(java.lang.String admin, java.lang.String password) throws OXException {
        com.openexchange.auth.Authenticator authenticator = services.getService(com.openexchange.auth.Authenticator.class);
        authenticator.doAuthentication(new Credentials(admin, password));
    }

    @Override
    public java.util.List<com.openexchange.push.soap.PushUserClient> listRegisteredPushUsers(java.lang.String admin, java.lang.String password) throws PushSoapInterfaceException_Exception {
        try {
            authenticate(admin, password);

            List<com.openexchange.push.PushUserClient> pushClients = PushManagerRegistry.getInstance().listRegisteredPushUsers();

            int size = pushClients.size();
            List<com.openexchange.push.soap.PushUserClient> list = new ArrayList<com.openexchange.push.soap.PushUserClient>(size);
            for (int i = 0; i < size; i++) {
                com.openexchange.push.PushUserClient pushClient = pushClients.get(i);
                if (null != pushClient) {
                    com.openexchange.push.soap.PushUser soapPushUser = new com.openexchange.push.soap.PushUser();
                    soapPushUser.setContextId(pushClient.getContextId());
                    soapPushUser.setUserId(pushClient.getUserId());

                    com.openexchange.push.soap.PushUserClient soapType = new com.openexchange.push.soap.PushUserClient();
                    soapType.setClient(pushClient.getClient());
                    soapType.setPushUser(soapPushUser);
                    list.add(soapType);
                }
            }

            return list;
        } catch (java.lang.Exception e) {
            com.openexchange.push.soap.PushSoapInterfaceException faultDetail = new com.openexchange.push.soap.PushSoapInterfaceException();
            com.openexchange.push.soap.Exception value = new com.openexchange.push.soap.Exception();
            value.setMessage(e.getMessage());
            faultDetail.setPushSoapInterfaceException(value);
            throw new PushSoapInterfaceException_Exception(e.getMessage(), faultDetail, e);
        }
    }

    @Override
    public java.lang.Boolean unregisterPermanentListenerFor(java.lang.Integer userId, java.lang.Integer contextId, java.lang.String client, java.lang.String admin, java.lang.String password) throws PushSoapInterfaceException_Exception {
        try {
            authenticate(admin, password);

            boolean b = PushManagerRegistry.getInstance().unregisterPermanentListenerFor(userId.intValue(), contextId.intValue(), client);
            return Boolean.valueOf(b);
        } catch (java.lang.Exception e) {
            com.openexchange.push.soap.PushSoapInterfaceException faultDetail = new com.openexchange.push.soap.PushSoapInterfaceException();
            com.openexchange.push.soap.Exception value = new com.openexchange.push.soap.Exception();
            value.setMessage(e.getMessage());
            faultDetail.setPushSoapInterfaceException(value);
            throw new PushSoapInterfaceException_Exception(e.getMessage(), faultDetail, e);
        }
    }

    @Override
    public java.util.List<com.openexchange.push.soap.PushUserInfo> listPushUsers(java.lang.String admin, java.lang.String password) throws PushSoapInterfaceException_Exception {
        try {
            authenticate(admin, password);

            List<com.openexchange.push.PushUserInfo> pushUsers = PushManagerRegistry.getInstance().listPushUsers();
            Collections.sort(pushUsers);

            int size = pushUsers.size();
            List<com.openexchange.push.soap.PushUserInfo> list = new ArrayList<com.openexchange.push.soap.PushUserInfo>(size);
            for (int i = 0; i < size; i++) {
                com.openexchange.push.PushUserInfo pushUser = pushUsers.get(i);
                if (null != pushUser) {
                    com.openexchange.push.soap.PushUser soapPushUser = new com.openexchange.push.soap.PushUser();
                    soapPushUser.setContextId(pushUser.getContextId());
                    soapPushUser.setUserId(pushUser.getUserId());

                    com.openexchange.push.soap.PushUserInfo soapType = new com.openexchange.push.soap.PushUserInfo();
                    soapType.setPermanent(pushUser.isPermanent());
                    soapType.setPushUser(soapPushUser);
                    list.add(soapType);
                }
            }

            return list;
        } catch (java.lang.Exception e) {
            com.openexchange.push.soap.PushSoapInterfaceException faultDetail = new com.openexchange.push.soap.PushSoapInterfaceException();
            com.openexchange.push.soap.Exception value = new com.openexchange.push.soap.Exception();
            value.setMessage(e.getMessage());
            faultDetail.setPushSoapInterfaceException(value);
            throw new PushSoapInterfaceException_Exception(e.getMessage(), faultDetail, e);
        }
    }

}
