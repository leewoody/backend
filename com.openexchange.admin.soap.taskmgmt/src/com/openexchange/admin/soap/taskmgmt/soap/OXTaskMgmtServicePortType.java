package com.openexchange.admin.soap.taskmgmt.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2012-06-01T19:02:36.732+02:00
 * Generated source version: 2.6.0
 *
 */
@WebService(targetNamespace = "http://soap.admin.openexchange.com", name = "OXTaskMgmtServicePortType")
@XmlSeeAlso({com.openexchange.admin.soap.taskmgmt.dataobjects.ObjectFactory.class, com.openexchange.admin.soap.taskmgmt.rmi.ObjectFactory.class, com.openexchange.admin.soap.taskmgmt.concurrent.ObjectFactory.class, com.openexchange.admin.soap.taskmgmt.exceptions.ObjectFactory.class, com.openexchange.admin.soap.taskmgmt.io.ObjectFactory.class, ObjectFactory.class})
public interface OXTaskMgmtServicePortType {

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:getTaskResults", output = "urn:getTaskResultsResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:getTaskResultsStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:getTaskResultsInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:getTaskResultsInvalidDataException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:getTaskResultsRemoteException"), @FaultAction(className = ExecutionException_Exception.class, value = "urn:getTaskResultsExecutionException"), @FaultAction(className = InterruptedException_Exception.class, value = "urn:getTaskResultsInterruptedException")})
    @RequestWrapper(localName = "getTaskResults", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.taskmgmt.soap.GetTaskResults")
    @WebMethod(action = "urn:getTaskResults")
    @ResponseWrapper(localName = "getTaskResultsResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.taskmgmt.soap.GetTaskResultsResponse")
    public java.lang.Object getTaskResults(
        @WebParam(name = "ctx", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.taskmgmt.dataobjects.Context ctx,
        @WebParam(name = "cred", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.taskmgmt.dataobjects.Credentials cred,
        @WebParam(name = "id", targetNamespace = "http://soap.admin.openexchange.com")
        java.lang.Integer id
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, RemoteException_Exception, ExecutionException_Exception, InterruptedException_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:flush", output = "urn:flushResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:flushStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:flushInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:flushInvalidDataException"), @FaultAction(className = TaskManagerException_Exception.class, value = "urn:flushTaskManagerException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:flushRemoteException")})
    @WebMethod(action = "urn:flush")
    public void flush(
        @WebParam(partName = "parameters", name = "flush", targetNamespace = "http://soap.admin.openexchange.com")
        Flush parameters
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, TaskManagerException_Exception, RemoteException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:getJobList", output = "urn:getJobListResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:getJobListStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:getJobListInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:getJobListInvalidDataException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:getJobListRemoteException")})
    @RequestWrapper(localName = "getJobList", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.taskmgmt.soap.GetJobList")
    @WebMethod(action = "urn:getJobList")
    @ResponseWrapper(localName = "getJobListResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.taskmgmt.soap.GetJobListResponse")
    public java.lang.String getJobList(
        @WebParam(name = "ctx", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.taskmgmt.dataobjects.Context ctx,
        @WebParam(name = "cred", targetNamespace = "http://soap.admin.openexchange.com")
        com.openexchange.admin.soap.taskmgmt.dataobjects.Credentials cred
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, RemoteException_Exception;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:deleteJob", output = "urn:deleteJobResponse", fault = {@FaultAction(className = StorageException_Exception.class, value = "urn:deleteJobStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:deleteJobInvalidCredentialsException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:deleteJobInvalidDataException"), @FaultAction(className = TaskManagerException_Exception.class, value = "urn:deleteJobTaskManagerException"), @FaultAction(className = RemoteException_Exception.class, value = "urn:deleteJobRemoteException")})
    @WebMethod(action = "urn:deleteJob")
    public void deleteJob(
        @WebParam(partName = "parameters", name = "deleteJob", targetNamespace = "http://soap.admin.openexchange.com")
        DeleteJob parameters
    ) throws StorageException_Exception, InvalidCredentialsException_Exception, InvalidDataException_Exception, TaskManagerException_Exception, RemoteException_Exception;
}
