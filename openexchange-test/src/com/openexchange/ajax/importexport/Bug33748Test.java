
package com.openexchange.ajax.importexport;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import java.io.ByteArrayInputStream;
import org.junit.Test;
import com.openexchange.ajax.contact.AbstractManagedContactTest;
import com.openexchange.ajax.importexport.actions.CSVImportRequest;
import com.openexchange.ajax.importexport.actions.CSVImportResponse;

/**
 * {@link Bug33748Test}
 *
 * CSV-Import fails - java.lang.StringIndexOutOfBoundsException: null
 *
 * @author <a href="mailto:tobias.friedrich@open-xchange.com">Tobias Friedrich</a>
 */
public class Bug33748Test extends AbstractManagedContactTest {

    /**
     * Initializes a new {@link Bug33748Test}.
     *
     * @param name The test name
     */
    public Bug33748Test() {
        super();
    }

    @Test
    public void testImportUTF16LE() throws Exception {
        /*
         * import csv
         */
        byte[] csv = { -1, -2, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 71, 0, 105, 0, 118, 0, 101, 0, 110, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 65, 0, 100, 0, 100, 0, 105, 0, 116, 0, 105, 0, 111, 0, 110, 0, 97, 0, 108, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 70, 0, 97, 0, 109, 0, 105, 0, 108, 0, 121, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 89, 0, 111, 0, 109, 0, 105, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 71, 0, 105, 0, 118, 0, 101, 0, 110, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 32, 0, 89, 0, 111, 0, 109, 0, 105, 0, 44, 0, 65, 0, 100, 0, 100, 0, 105, 0, 116, 0, 105, 0, 111, 0, 110, 0, 97, 0, 108, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 32, 0, 89, 0, 111, 0, 109, 0, 105, 0, 44, 0, 70, 0, 97, 0, 109, 0, 105, 0, 108, 0, 121, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 32, 0, 89, 0, 111, 0, 109, 0, 105, 0, 44, 0, 78, 0, 97, 0, 109, 0, 101, 0, 32, 0, 80, 0, 114, 0, 101, 0, 102, 0, 105, 0, 120, 0, 44, 0, 78, 0, 97, 0, 109, 0, 101, 0, 32, 0, 83, 0, 117, 0, 102, 0, 102, 0, 105, 0, 120, 0, 44, 0, 73, 0, 110, 0, 105, 0, 116, 0, 105, 0, 97, 0, 108, 0, 115, 0, 44, 0, 78, 0, 105, 0, 99, 0, 107, 0, 110, 0, 97, 0, 109, 0, 101, 0, 44, 0, 83, 0, 104, 0, 111, 0, 114, 0, 116, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 77, 0, 97, 0, 105, 0, 100, 0, 101, 0, 110, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 66, 0, 105, 0, 114, 0, 116, 0, 104, 0, 100, 0, 97, 0, 121, 0, 44, 0, 71, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 44, 0, 76, 0, 111, 0, 99, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 44, 0, 66, 0, 105, 0, 108, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 73, 0, 110, 0, 102, 0, 111, 0, 114, 0, 109, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 44, 0, 68, 0, 105, 0, 114, 0, 101, 0, 99, 0, 116, 0, 111, 0, 114, 0, 121, 0, 32, 0, 83, 0, 101, 0, 114, 0, 118, 0, 101, 0, 114, 0, 44, 0, 77, 0, 105, 0, 108, 0, 101, 0, 97, 0, 103, 0, 101, 0, 44, 0, 79, 0, 99, 0, 99, 0, 117, 0, 112, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 44, 0, 72, 0, 111, 0, 98, 0, 98, 0, 121, 0, 44, 0, 83, 0, 101, 0, 110, 0, 115, 0, 105, 0, 116, 0, 105, 0, 118, 0, 105, 0, 116, 0, 121, 0, 44, 0, 80, 0, 114, 0, 105, 0, 111, 0, 114, 0, 105, 0, 116, 0, 121, 0, 44, 0, 83, 0, 117, 0, 98, 0, 106, 0, 101, 0, 99, 0, 116, 0, 44, 0, 78, 0, 111, 0, 116, 0, 101, 0, 115, 0, 44, 0, 71, 0, 114, 0, 111, 0, 117, 0, 112, 0, 32, 0, 77, 0, 101, 0, 109, 0, 98, 0, 101, 0, 114, 0, 115, 0, 104, 0, 105, 0, 112, 0, 44, 0, 69, 0, 45, 0, 109, 0, 97, 0, 105, 0, 108, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 84, 0, 121, 0, 112, 0, 101, 0, 44, 0, 69, 0, 45, 0, 109, 0, 97, 0, 105, 0, 108, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 86, 0, 97, 0, 108, 0, 117, 0, 101, 0, 44, 0, 69, 0, 45, 0, 109, 0, 97, 0, 105, 0, 108, 0, 32, 0, 50, 0, 32, 0, 45, 0, 32, 0, 84, 0, 121, 0, 112, 0, 101, 0, 44, 0, 69, 0, 45, 0, 109, 0, 97, 0, 105, 0, 108, 0, 32, 0, 50, 0, 32, 0, 45, 0, 32, 0, 86, 0, 97, 0, 108, 0, 117, 0, 101, 0, 44, 0, 80, 0, 104, 0, 111, 0, 110, 0, 101, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 84, 0, 121, 0, 112, 0, 101, 0, 44, 0, 80, 0, 104, 0, 111, 0, 110, 0, 101, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 86, 0, 97, 0, 108, 0, 117, 0, 101, 0, 44, 0, 80, 0, 104, 0, 111, 0, 110, 0, 101, 0, 32, 0, 50, 0, 32, 0, 45, 0, 32, 0, 84, 0, 121, 0, 112, 0, 101, 0, 44, 0, 80, 0, 104, 0, 111, 0, 110, 0, 101, 0, 32, 0, 50, 0, 32, 0, 45, 0, 32, 0, 86, 0, 97, 0, 108, 0, 117, 0, 101, 0, 44, 0, 80, 0, 104, 0, 111, 0, 110, 0, 101, 0, 32, 0, 51, 0, 32, 0, 45, 0, 32, 0, 84, 0, 121, 0, 112, 0, 101, 0, 44, 0, 80, 0, 104, 0, 111, 0, 110, 0, 101, 0, 32, 0, 51, 0, 32, 0, 45, 0, 32, 0, 86, 0, 97, 0, 108, 0, 117, 0, 101, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 84, 0, 121, 0, 112, 0, 101, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 89, 0, 111, 0, 109, 0, 105, 0, 32, 0, 78, 0, 97, 0, 109, 0, 101, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 84, 0, 105, 0, 116, 0, 108, 0, 101, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 68, 0, 101, 0, 112, 0, 97, 0, 114, 0, 116, 0, 109, 0, 101, 0, 110, 0, 116, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 83, 0, 121, 0, 109, 0, 98, 0, 111, 0, 108, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 76, 0, 111, 0, 99, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 44, 0, 79, 0, 114, 0, 103, 0, 97, 0, 110, 0, 105, 0, 122, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 49, 0, 32, 0, 45, 0, 32, 0, 74, 0, 111, 0, 98, 0, 32, 0, 68, 0, 101, 0, 115, 0, 99, 0, 114, 0, 105, 0, 112, 0, 116, 0, 105, 0, 111, 0, 110, 0, 13, 0, 10, 0, 32, 0, 45, 0, 32, 0, 84, 0, 101, 0, 115, 0, 116, 0, 32, 0, 84, 0, 101, 0, 115, 0, 116, 0, 32, 0, 84, 0, 101, 0, 115, 0, 116, 0, 44, 0, 32, 0, 45, 0, 32, 0, 84, 0, 101, 0, 115, 0, 116, 0, 32, 0, 84, 0, 101, 0, 115, 0, 116, 0, 44, 0, 44, 0, 84, 0, 101, 0, 115, 0, 116, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 34, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 45, 0, 34, 0, 44, 0, 42, 0, 32, 0, 77, 0, 121, 0, 32, 0, 67, 0, 111, 0, 110, 0, 116, 0, 97, 0, 99, 0, 116, 0, 115, 0, 44, 0, 42, 0, 32, 0, 79, 0, 116, 0, 104, 0, 101, 0, 114, 0, 44, 0, 116, 0, 101, 0, 115, 0, 116, 0, 46, 0, 116, 0, 101, 0, 115, 0, 116, 0, 64, 0, 101, 0, 120, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 46, 0, 99, 0, 111, 0, 109, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 44, 0, 13, 0, 10, 0
        };
        CSVImportRequest request = new CSVImportRequest(folderID, new ByteArrayInputStream(csv), false);
        CSVImportResponse response = getClient().execute(request);
        assertNotNull("No response", response);
        /*
         * only allow I_E-0804 if no valid column mapping found
         */
        assertTrue("errorneous response", false == response.hasError() || "I_E-0804".equals(response.getResponse().getException().getErrorCode()));
    }

}
