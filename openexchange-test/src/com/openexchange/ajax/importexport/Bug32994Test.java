
package com.openexchange.ajax.importexport;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import java.io.ByteArrayInputStream;
import org.json.JSONArray;
import org.junit.Test;
import com.openexchange.ajax.contact.AbstractManagedContactTest;
import com.openexchange.ajax.importexport.actions.CSVImportRequest;
import com.openexchange.ajax.importexport.actions.CSVImportResponse;
import com.openexchange.groupware.container.Contact;

/**
 * {@link Bug32994Test}
 *
 * import of gmail csv don't honor job title
 *
 * @author <a href="mailto:tobias.friedrich@open-xchange.com">Tobias Friedrich</a>
 */
public class Bug32994Test extends AbstractManagedContactTest {

    /**
     * Initializes a new {@link Bug32994Test}.
     *
     * @param name The test name
     */
    public Bug32994Test() {
        super();
    }

    @Test
    public void testImportWithJobTitle() throws Exception {
        /*
         * import csv
         */
        byte[] csv = { 70, 105, 114, 115, 116, 32, 78, 97, 109, 101, 44, 77, 105, 100, 100, 108, 101, 32, 78, 97, 109, 101, 44, 76, 97, 115, 116, 32, 78, 97, 109, 101, 44, 84, 105, 116, 108, 101, 44, 83, 117, 102, 102, 105, 120, 44, 73, 110, 105, 116, 105, 97, 108, 115, 44, 87, 101, 98, 32, 80, 97, 103, 101, 44, 71, 101, 110, 100, 101, 114, 44, 66, 105, 114, 116, 104, 100, 97, 121, 44, 65, 110, 110, 105, 118, 101, 114, 115, 97, 114, 121, 44, 76, 111, 99, 97, 116, 105, 111, 110, 44, 76, 97, 110, 103, 117, 97, 103, 101, 44, 73, 110, 116, 101, 114, 110, 101, 116, 32, 70, 114, 101, 101, 32, 66, 117, 115, 121, 44, 78, 111, 116, 101, 115, 44, 69, 45, 109, 97, 105, 108, 32, 65, 100, 100, 114, 101, 115, 115, 44, 69, 45, 109, 97, 105, 108, 32, 50, 32, 65, 100, 100, 114, 101, 115, 115, 44, 69, 45, 109, 97, 105, 108, 32, 51, 32, 65, 100, 100, 114, 101, 115, 115, 44, 80, 114, 105, 109, 97, 114, 121, 32, 80, 104, 111, 110, 101, 44, 72, 111, 109, 101, 32, 80, 104, 111, 110, 101, 44, 72, 111, 109, 101, 32, 80, 104, 111, 110, 101, 32, 50, 44, 77, 111, 98, 105, 108, 101, 32, 80, 104, 111, 110, 101, 44, 80, 97, 103, 101, 114, 44, 72, 111, 109, 101, 32, 70, 97, 120, 44, 72, 111, 109, 101, 32, 65, 100, 100, 114, 101, 115, 115, 44, 72, 111, 109, 101, 32, 83, 116, 114, 101, 101, 116, 44, 72, 111, 109, 101, 32, 83, 116, 114, 101, 101, 116, 32, 50, 44, 72, 111, 109, 101, 32, 83, 116, 114, 101, 101, 116, 32, 51, 44, 72, 111, 109, 101, 32, 65, 100, 100, 114, 101, 115, 115, 32, 80, 79, 32, 66, 111, 120, 44, 72, 111, 109, 101, 32, 67, 105, 116, 121, 44, 72, 111, 109, 101, 32, 83, 116, 97, 116, 101, 44, 72, 111, 109, 101, 32, 80, 111, 115, 116, 97, 108, 32, 67, 111, 100, 101, 44, 72, 111, 109, 101, 32, 67, 111, 117, 110, 116, 114, 121, 44, 83, 112, 111, 117, 115, 101, 44, 67, 104, 105, 108, 100, 114, 101, 110, 44, 77, 97, 110, 97, 103, 101, 114, 39, 115, 32, 78, 97, 109, 101, 44, 65, 115, 115, 105, 115, 116, 97, 110, 116, 39, 115, 32, 78, 97, 109, 101, 44, 82, 101, 102, 101, 114, 114, 101, 100, 32, 66, 121, 44, 67, 111, 109, 112, 97, 110, 121, 32, 77, 97, 105, 110, 32, 80, 104, 111, 110, 101, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 80, 104, 111, 110, 101, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 80, 104, 111, 110, 101, 32, 50, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 70, 97, 120, 44, 65, 115, 115, 105, 115, 116, 97, 110, 116, 39, 115, 32, 80, 104, 111, 110, 101, 44, 67, 111, 109, 112, 97, 110, 121, 44, 74, 111, 98, 32, 84, 105, 116, 108, 101, 44, 68, 101, 112, 97, 114, 116, 109, 101, 110, 116, 44, 79, 102, 102, 105, 99, 101, 32, 76, 111, 99, 97, 116, 105, 111, 110, 44, 79, 114, 103, 97, 110, 105, 122, 97, 116, 105, 111, 110, 97, 108, 32, 73, 68, 32, 78, 117, 109, 98, 101, 114, 44, 80, 114, 111, 102, 101, 115, 115, 105, 111, 110, 44, 65, 99, 99, 111, 117, 110, 116, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 65, 100, 100, 114, 101, 115, 115, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 83, 116, 114, 101, 101, 116, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 83, 116, 114, 101, 101, 116, 32, 50, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 83, 116, 114, 101, 101, 116, 32, 51, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 65, 100, 100, 114, 101, 115, 115, 32, 80, 79, 32, 66, 111, 120, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 67, 105, 116, 121, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 83, 116, 97, 116, 101, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 80, 111, 115, 116, 97, 108, 32, 67, 111, 100, 101, 44, 66, 117, 115, 105, 110, 101, 115, 115, 32, 67, 111, 117, 110, 116, 114, 121, 44, 79, 116, 104, 101, 114, 32, 80, 104, 111, 110, 101, 44, 79, 116, 104, 101, 114, 32, 70, 97, 120, 44, 79, 116, 104, 101, 114, 32, 65, 100, 100, 114, 101, 115, 115, 44, 79, 116, 104, 101, 114, 32, 83, 116, 114, 101, 101, 116, 44, 79, 116, 104, 101, 114, 32, 83, 116, 114, 101, 101, 116, 32, 50, 44, 79, 116, 104, 101, 114, 32, 83, 116, 114, 101, 101, 116, 32, 51, 44, 79, 116, 104, 101, 114, 32, 65, 100, 100, 114, 101, 115, 115, 32, 80, 79, 32, 66, 111, 120, 44, 79, 116, 104, 101, 114, 32, 67, 105, 116, 121, 44, 79, 116, 104, 101, 114, 32, 83, 116, 97, 116, 101, 44, 79, 116, 104, 101, 114, 32, 80, 111, 115, 116, 97, 108, 32, 67, 111, 100, 101, 44, 79, 116, 104, 101, 114, 32, 67, 111, 117, 110, 116, 114, 121, 44, 67, 97, 108, 108, 98, 97, 99, 107, 44, 67, 97, 114, 32, 80, 104, 111, 110, 101, 44, 73, 83, 68, 78, 44, 82, 97, 100, 105, 111, 32, 80, 104, 111, 110, 101, 44, 84, 84, 89, 47, 84, 68, 68, 32, 80, 104, 111, 110, 101, 44, 84, 101, 108, 101, 120, 44, 85, 115, 101, 114, 32, 49, 44, 85, 115, 101, 114, 32, 50, 44, 85, 115, 101, 114, 32, 51, 44, 85, 115, 101, 114, 32, 52, 44, 75, 101, 121, 119, 111, 114, 100, 115, 44, 77, 105, 108, 101, 97, 103, 101, 44, 72, 111, 98, 98, 121, 44, 66, 105, 108, 108, 105, 110, 103, 32, 73, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 44, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 83, 101, 114, 118, 101, 114, 44, 83, 101, 110, 115, 105, 116, 105, 118, 105, 116, 121, 44, 80, 114, 105, 111, 114, 105, 116, 121, 44, 80, 114, 105, 118, 97, 116, 101, 44, 67, 97, 116, 101, 103, 111, 114, 105, 101, 115, 13, 10, 84, 101, 115, 116, 44, 44, 77, 117, 115, 101, 114, 44, 44, 44, 44, 44, 44, 49, 50, 47, 50, 47, 49, 57, 55, 48, 44, 44, 44, 44, 44, 34, 116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 110, 111, 116, 101, 13, 10, 50, 32, 108, 105, 110, 101, 115, 32, 110, 111, 116, 101, 13, 10, 51, 32, 108, 105, 110, 101, 115, 32, 110, 111, 116, 101, 13, 10, 13, 10, 13, 10, 73, 77, 58, 32, 71, 84, 65, 76, 75, 58, 32, 116, 101, 115, 116, 117, 115, 101, 114, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 73, 77, 58, 32, 67, 117, 115, 116, 111, 109, 58, 32, 116, 101, 115, 116, 117, 115, 101, 50, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 34, 44, 116, 101, 115, 116, 117, 115, 101, 114, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 44, 44, 44, 44, 44, 44, 43, 52, 57, 49, 49, 49, 49, 49, 44, 44, 44, 34, 104, 111, 109, 101, 32, 97, 100, 114, 101, 115, 115, 13, 10, 115, 117, 112, 101, 114, 32, 115, 116, 114, 101, 101, 116, 32, 104, 111, 109, 101, 32, 49, 34, 44, 34, 104, 111, 109, 101, 32, 97, 100, 114, 101, 115, 115, 13, 10, 115, 117, 112, 101, 114, 32, 115, 116, 114, 101, 101, 116, 32, 104, 111, 109, 101, 32, 49, 34, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 111, 120, 44, 109, 121, 112, 111, 115, 105, 116, 105, 111, 110, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 78, 111, 114, 109, 97, 108, 44, 44, 101, 100, 105, 116, 59, 77, 121, 32, 67, 111, 110, 116, 97, 99, 116, 115, 44, 13, 10
        };
        CSVImportRequest request = new CSVImportRequest(folderID, new ByteArrayInputStream(csv), false);
        CSVImportResponse response = getClient().execute(request);
        assertNotNull("No response", response);
        assertFalse("response has error", response.hasError());
        JSONArray data = (JSONArray) response.getData();
        assertNotNull("got no data", data);
        assertEquals(1, data.length());
        Contact contact = cotm.getAction(folderID, data.getJSONObject(0).getInt("id"));
        assertNotNull("imported contact not found", contact);
        assertNotNull("no position imported", contact.getPosition());
        assertEquals("position wrong", "myposition", contact.getPosition());
    }

}
