/login?action=tokenLogin:
  post:
    operationId: doTokenLogin
    tags:
      - Login
    summary: Login for a very short living session.
    description: |
      This request allows every possible client to create a very short living session. This session can then be transferred to any other client preferably a browser entering then the normal web interface. Then the sessions life time will be extended equally to every other session.
      
      Compared to the login mechanism using the random token, this request is more secure because two tokens are used. One of these tokens is only known to the client and one is generated by the server. Only the combination of both tokens allows to use the session. The combination of both tokens must be done by the client creating the session.
      
      **DISCLAIMER:** This request MUST NOT be used by some server side instance. If some server side instance uses this request to create a session for a browser on some client machine, then you have to transfer the full URL with server and client token over some connection to the client. This creates a **VULNERABILITY** if this is done. The token login method is only secure if this request is already sent from the same machine that later runs the browser using the created session.
    produces:
      - application/json
      - text/html
    parameters:
      - in: formData
        name: login
        type: string
        description: The login information.
        required: true
      - in: formData
        name: password
        type: string
        format: password
        description: The password (MUST be placed in the request body, otherwise the login request will be denied).
        required: true
      - in: formData
        name: clientToken
        type: string
        description: Client side identifier for accessing the session later. The value should be some token that is unique for every login request.
        required: true
      - in: query
        type: string
        name: authId
        description: |
          Identifier for tracing every single login request passed between different systems in a cluster.
          The value should be some token that is unique for every login request. This parameter must be
          given as URL parameter and not inside the body of the POST request.
        required: true
      - in: formData
        name: client
        type: string
        description: Identifier of the client using the HTTP/JSON interface. This is for statistic evaluations what clients are used with Open-Xchange.
        required: true
      - in: formData
        name: version
        type: string
        description: Version of the HTTP/JSON interface client. Only for statistic evaluations.
        required: true
      - in: formData
        name: autologin
        type: boolean
        description: |
          '’True’ or ’false’. True tells the UI to issue a store request for the session cookie. This store
          request is necessary if you want the autologin request not to fail. This must be enabled on
          the server and a client can test with the autologin request if it is enabled or not.'
        required: true
      - in: formData
        name: uiWebPath
        type: string
        description: |
          Defines another path on the web server where the UI is located. If this parameter is not
          defined the configured default of the backend is used.
        required: false
      - in: formData
        name: clientIP
        type: string
        description: IP address of the client host for that the session is created. If this parameter is not specified the IP address of the HTTP client doing this request is used.
        required: false
      - in: formData
        name: clientUserAgent
        type: string
        description: |
          Value of the User-Agent header of the client host for that the session is created. If this
          parameter is not specified the User-Agent of the current HTTP client doing this request is used.
        required: false
      - in: formData
        name: jsonResponse
        type: boolean
        description: ’True’ or ’false’ (default). Defines the returned data type as JSON. Default `false` will return a redirect.
        required: false
        default: false
    responses:
      200:
        description: |
          In case `jsonResponse=true`, it is returned a JSON object. Otherwise a redirect to the web UI.
          The URL of the web UI is either taken from the given parameter or from the configured default
          of the backend. This redirect will only contain the server side token. The client side token
          sent in the request must be appended by the client creating the session. The final URL must
          have the form redirect_URL&clientToken=token. Both tokens are necessary to use the session and
          both tokens must match. Otherwise the session is terminated. In case of errors the responsible
          fields in the response are filled (see [Error handling](#error-handling)).
        schema:
          $ref: "#/definitions/TokenLoginResponse"
