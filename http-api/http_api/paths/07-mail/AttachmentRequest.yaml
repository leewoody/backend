/mail?action=attachment:
  get:
    operationId: getMailAttachment
    tags:
      - Mail
    summary: Gets a mail attachment.
    parameters:
      - $ref: "#/parameters/gblQueryParamSession"
      - $ref: "#/parameters/gblQueryParamMailFolder"
      - in: query
        name: id
        type: string
        description:  Object ID of the mail which contains the attachment.
        required: true
      - in: query
        name: attachment
        type: string
        description:  ID of the requested attachment (can be substituted by the parameter `cid` otherwise this parameter is **madatory**).
        required: false
      - in: query
        name: cid
        type: string
        description:  Value of header 'Content-ID' of the requested attachment (can be substituted by the parameter `attachment` otherwise this parameter is **madatory**).
        required: false
      - in: query
        name: save
        type: integer
        minimum: 0
        maximum: 1
        description: 1 overwrites the defined mimetype for this attachment to force the download dialog, otherwise 0.
        required: false
      - in: query
        name: filter
        type: integer
        minimum: 0
        maximum: 1
        description:  1 to apply HTML white-list filter rules if and only if requested attachment is of MIME type `text/htm*` **AND** parameter `save` is set to 0.
        required: false
      - in: query
        name: allow_nested_messages
        type: boolean
        description:  A value of "false" leads to light-weight JSON objects for nested messages containing only the "id" field
        required: false
      - in: query
        name: as_json
        type: boolean
        description:  Nested messages are parsed into full JSON objects. Can lead to longer loading times, for multiple nested messages.
        required: false    
      - $ref: "#/parameters/gblQueryParamsDecrypt"
      - $ref: "#/parameters/glbQueryParamsCryptoAuth"
    responses:
      200:
        description: The raw byte data of the document. The response type for the HTTP Request is set accordingly to the defined mimetype for this attachment, except the parameter save is set to 1.
        schema:
          type: string
          format: binary
  put:
    operationId: putMailAttachment
    tags:
      - Mail
    summary: Stores a mail attachment to the drive.
    consumes:
      - application/json
    parameters:
      - $ref: "#/parameters/gblQueryParamSession"
      - $ref: "#/parameters/gblQueryParamMailFolder"
      - in: query
        name: id
        type: string
        description:  Object ID of the mail which contains the attachment.
        required: true
      - in: query
        name: attachment
        type: string
        description:  ID of the requested attachment.
        required: true
      - in: query
        name: dest_folder
        type: string
        description:  Object ID of the folder in which the attachment should be stored.
        required: true
      - in: body
        name: body
        description: |
          A possible empty JSON object containing the optional fields `description` and `filename`. The filename and description values will be used for the newly created file in the drive module.
        required: true
        schema:
          $ref: "#/definitions/PutAttachmentBody"
    responses:
      200:
        description: A JSON object containting the data of the store operation. E.g. contains the id of the newly created drive file.
        schema:
          type: object
          properties:
            data: 
              type: object
              properties:
                mailFolder:
                  type: string
                  description: Object ID of the folder who contains the mails.
                mailUID:
                  type: string
                  description: Object ID of the mail which contains the attachment.
                id:
                  type: string
                  description: Object ID of the newly created drive file.
                folder_id: 
                  type: string
                  description: Object ID of the folder in which the attachment is stored to.
                filename:
                  type: string
                  description: Name of the newly created drive file.

