# Server Properties
# This file must be name "server.properties". Otherwise its contents are not
# read.

# Enable or disable SearchIterator prefetch. If prefetch is enabled the underlying
# ResultSet data is completely stored and all related resources are released
# immediately when creating a SearchIterator. Possible values: TRUE / FALSE
PrefetchEnabled=true

# Upload Parameter. All uploads that are done by a client are temporarily saved
# in that directory.
UPLOAD_DIRECTORY=/var/spool/open-xchange/uploads

# If the sum of all uploaded files in one request is greater than this value, the upload will be rejected.
# This value can be overridden on a per-module basis by setting the MAX_UPLOAD_SIZE parameter in the modules
# config file (attachment.properties or infostore.properties). Or it can be overriden on a per-user
# basis by setting the upload_quota in the mail configuration of this user
# If this value is set to 0 and not overridden by the module config or user config uploads will be unrestricted.
# The size is in bytes.
MAX_UPLOAD_SIZE=104857600

# The max. idle time in milliseconds for an uploaded file temporary stored in
# upload directory
MAX_UPLOAD_IDLE_TIME_MILLIS=300000

# The max. HTTP body size
# Zero or less means infinite.
#   /!\   Deprecated: Use "com.openexchange.servlet.maxBodySize" instead   /!\
MAX_BODY_SIZE=0

# The default max. number of allowed concurrent requests per user
# This property only has effect if no individual value has been specified for active user
# A value less than or equal to zero means infinite
com.openexchange.defaultMaxConcurrentAJAXRequests=100

# DEFAULT ENCODING FOR INCOMING HTTP REQUESTS
# This value MUST be equal to web server's default encoding
DefaultEncoding=UTF-8

# Minimum number of characters a search pattern must contain. 0 means no minimum.
# This should prevent slow searches for contacts or big responses in large
# contexts.
com.openexchange.MinimumSearchCharacters=0

# e-mail address of a person that can be called if data has been published
# and the actual owner of the data objects to the publication. If removed or
# left empty, the e-maill address of the context admin is used.
PUBLISH_REVOKE=

# On session validation of every request the client IP address is compared with the client IP address used for the login request. If this
# configuration parameter is set to "true" and the client IP addresses do not match the request will be denied and the denied request is
# logged with level info. Setting this parameter to "false" will only log the different client IP addresses with debug level.
#
# WARNING! This should be only set to "false" if you know what you are doing and if all requests are secure - requests are always encrypted
# by using HTTPS.
com.openexchange.IPCheck=true

# Subnet mask for accepting IP-ranges.
# Using CIDR-Notation for v4 and v6 or dotted decimal only for v4.
# Examples:
# com.openexchange.IPMaskV4=255.255.255.0
# com.openexchange.IPMaskV4=/24
# com.openexchange.IPMaskV6=/60
com.openexchange.IPMaskV4=
com.openexchange.IPMaskV6=

# Specify a comma-separated list of client patterns that do bypass IP check
# E.g. com.openexchange.IPCheckWhitelist="Mobile App*", "Foo*"
com.openexchange.IPCheckWhitelist="open-xchange-mailapp", "open-xchange-mobile-api-facade"

# Configures the path on the web server where the UI is located. This path is used to generate links directly into the UI. The default
# conforms to the path where the UI is installed by the standard packages on the web server. This path is used for the [uiwebpath].
# For the Open-Xchange 6 frontend the path needs to be configured to "/ox6/index.html".
# For the App Suite frontend the path needs to be configured to "/appsuite/" which is the default.
com.openexchange.UIWebPath=/appsuite/

# Specify the prefix for Central Dispatcher framework (the Open-Xchange AJAX interface)
com.openexchange.dispatcher.prefix=/ajax/

# The time-to-live for session, secret and JSESSIONID cookie.
# Note:
#       Time-to-live is only relevant for session and secret cookie, if autologin is enabled as well.
#       Autologin is configured in sessiond.properties by "com.openexchange.sessiond.autologin" property.
# Can contain units of measurement: D (=days) W(=weeks) H(=hours).
#
# Special identifier "web-browser" to let the Cookie(s) be deleted when the Web browser exits
com.openexchange.cookie.ttl=1W

# Whether the "; HttpOnly" should be appended to server cookies exits
com.openexchange.cookie.httpOnly=true

# Additional fields that should be used when calculating the hash for the cookie name. Always used are the client identifier passed with the
# login request and the User-Agent HTTP header. Additional fields can be currently only HTTP headers.
!com.openexchange.cookie.hash.fields=

# Whether the hash value for the cookie name should be calculated or remembered from the session for each request.
# Possible values are:
# calculate (default) - Calculate hash from client login parameter and HTTP header User-Agent
# (may be modified through c.o.cookie.hash.fields)
# remember - remember once calculated hash in session and use it for the whole session life time (less secure)
com.openexchange.cookie.hash=calculate

# Cookie hash salt to avoid a potential brute force attack to cookie hashes.
# This value should be replaced by any random String with at least 16 Characters.
com.openexchange.cookie.hash.salt=replaceMe1234567890

# If an HTTPS connection is detected the cookie is automatically marked as secure. This tells the browser only to send the cookie over
# encrypted connections. If HTTPS is terminated in front by some load balancer only HTTP is detected. Then this parameter can force to set
# the secure flag for cookies. Additionally all links generated inside the groupware to point at itself will use the https:// protocol prefix
# when this is set. Use this flag to indicate that HTTPS termination happens elsewhere.
com.openexchange.forceHTTPS=false

# The maximum number of active sessions that will be created by this Manager, or -1 for no limit.
# Default is 250.000 HTTP sessions
com.openexchange.servlet.maxActiveSessions=250000

# The initial maximum time interval, in seconds, between client requests before a HTTP session is invalidated.
# This only applies to the HTTP session controlled by special JSESSIONID cookie, and does therefore not influence life-time of Groupware session.
# A negative value will result in sessions never timing out.
# If the attribute is not provided, a default of 1800 seconds is used.
com.openexchange.servlet.maxInactiveInterval=1800

# Specify the maximum body size allowed being transferred via PUT or POST method
# A request exceeding that limit will be responded with a 500 error and that request is discarded
# Equal or less than zero means no restriction concerning body size
# By default limit is set to 100MB (104857600 bytes).
com.openexchange.servlet.maxBodySize=104857600

# Specify the name of the echo header whose value is echoed for each request providing that header
com.openexchange.servlet.echoHeaderName=X-Echo-Header

# The value of Content-Security-Policy header
# Please refer to An Introduction to Content Security Policy (http://www.html5rocks.com/en/tutorials/security/content-security-policy/)
# Default value is empty; meaning no Content-Security-Policy header
com.openexchange.servlet.contentSecurityPolicy=""

# Specify the rate limit' time window in which to track incoming HTTP requests
# Default value is 300000 (5 minutes).
com.openexchange.servlet.maxRateTimeWindow=300000

# Specify the rate limit that applies to incoming HTTP requests
# A client that exceeds that limit will receive a "429 Too Many Requests" HTTP error code
# That rate limit acts like a sliding window time frame; meaning that it considers only
# requests that fit into time windows specified through "com.openexchange.servlet.maxRateTimeWindow" from current time stamp:
# window-end := $now
# window-start := $window-end - $maxRateTimeWindow
# Default value is 1500 requests per $maxRateTimeWindow (default: 5 minutes).
com.openexchange.servlet.maxRate=1500

# Specify those AJAX-accessible modules which are excluded from the rate limit checks
# Default value: rt, system
com.openexchange.servlet.maxRateLenientModules=rt, system

# Specify (wildcard notation supported) those User-Agents which are excluded from the rate limit checks
# Default value: "Open-Xchange .NET HTTP Client*", "Open-Xchange USM HTTP Client*", "Jakarta Commons-HttpClient*"
com.openexchange.servlet.maxRateLenientClients="Open-Xchange .NET HTTP Client*", "Open-Xchange USM HTTP Client*", "Jakarta Commons-HttpClient*"

# Specify (wildcard notation supported) those remote addresses/IPs which are excluded from the rate limit checks
# Default value is empty
com.openexchange.servlet.maxRateLenientRemoteAddresses=

# Specify how to associate a rate limit with a HTTP request
# By default a rate limit is associated with that tuple of { remote-address, user-agent }
# This does not apply to all scenarios. Therefore it is possible to specify more parts in a comma-separated list that build up the key.
# Possible values are:
# - "http-session"                   := The identifier of the request-associated HTTP session aka JSESSIONID cookie
# - "cookie-" + <cookie-name>        := Specifies the (ignore-case) name of the arbitrary cookie whose value is considered. If missing it is ignored.
# - "header-" + <header-name>        := Specifies the (ignore-case) name of the arbitrary header whose value is considered. If missing it is ignored.
# - "parameter-" + <parameter-name>  := Specifies the (ignore-case) name of the arbitrary parameter whose value is considered. If missing it is ignored.
#
# E.g. com.openexchange.servlet.maxRateKeyPartProviders=cookie-My-Secret-Cookie, parameter-request_num
#
# Default is empty; meaning only remote-address and user-agent are considered
com.openexchange.servlet.maxRateKeyPartProviders=

# Specifies max. message length to log. Messages that exceed that limit are split.
# A value of less than 1 means unlimited.
# Default is -1 (unlimited)
com.openexchange.log.maxMessageLength=-1

# Specify the max. number of allowed attributes for a JSON object
com.openexchange.json.maxSize=2500

# Setting this to true means that the WebDav XML servlets for attachments, calendar, contacts and tasks will be disabled.
# On requests to these servlets a service-not-available (503) response will be sent. See "webdav-disabled-message.txt"
# to customize the detailed error message that will be sent.
com.openexchange.webdav.disabled=false

# Whether the JSON response object should provide the stack trace of the associated exception
com.openexchange.ajax.response.includeStackTraceOnError=false

# Whether the JSON response object in case of an error should include the exception arguments or not
# Default value: false 
com.openexchange.ajax.response.includeArguments=false

# The host for the connector's http network listener. Set to "*" if you
# want to listen on all available interfaces.
#Default value: 127.0.0.1, bind to localhost only.
com.openexchange.connector.networkListenerHost=127.0.0.1

# The default port for the connector's http network listener.
# Default value: 8009.
com.openexchange.connector.networkListenerPort=8009

# The default port for the connector's https network listener.
# Default value: 8010.
com.openexchange.connector.networkSslListenerPort=8010

# Specify the max. number of allowed request parameters for the connector http
# Default value: 1000
com.openexchange.connector.maxRequestParameters=1000

# Controls the shut-down behavior of the HTTP connector.
#
# If fast shut-down is enabled, the HTTP connector is attempted to be stopped as fast as possible.
# This could lead to currently in-progress requests to quit with errors (due to absent services); e.g. NullPointerExceptions.
#
# If set to "false" (default) an orderly shut-down is initiated; waiting for currently running requests to terminate. This may slow down
# the shut-down sequence.
#
# Default value: false
com.openexchange.connector.shutdownFast=false

# Specify the number of seconds to await an orderly shut-down
# (only effective if "com.openexchange.connector.shutdownFast" is set to "false")
#
# A value of less than or equal to 0 (zero) will cause to wait forever; otherwise a hard shut-down is initiated if the wait time elapsed.
#
# Default value: 90
com.openexchange.connector.awaitShutDownSeconds=90

# To enable proper load balancing and request routing from {client1, client2 ..
# .} --> balancer --> {backend1, backend2 ...} we have to append a backend route
# to the JSESSIONID cookies separated by a '.'. It's important that this backend
# route is unique for every single backend behind the load balancer.
# The string has to be a sequence of characters excluding semi-colon, comma and
# white space so the JSESSIONID cookie stays in accordance with the cookie
# specification after we append the backendroute to it.
# Default value: OX0
com.openexchange.server.backendRoute=OX0

# Decides if we should consider X-Forward-Headers that reach the backend.
# Those can be spoofed by clients so we have to make sure to consider the headers only if the proxy/proxies reliably override those
# headers for incoming requests.
# Default value: true
com.openexchange.server.considerXForwards=true

# The name of the protocolHeader used to identify the originating IP address of
# a client connecting to a web server through an HTTP proxy or load balancer.
# This is needed for grizzly based setups that make use of http proxying.
# If the header isn't found the first proxy in front of grizzly will be used
# as originating IP/remote address.
# Default value: X-Forwarded-For
com.openexchange.server.forHeader=X-Forwarded-For

# A list of know proxies in front of our httpserver/balancer as comma separated IPs e.g: 192.168.1.50, 192.168.1.51
com.openexchange.server.knownProxies =

# Specify the amount of seconds to wait for a CSS content being parsed
# This property influences parsing of HTML messages. If CSS could not be parsed in time, CSS is stripped from message's content.
# Default value is 4
com.openexchange.html.css.parse.timeout=4

# Specify the OXException categories (comma separated) that shall not be logged.
# The Exception itself will still be logged as configured, but the StackTraces are omitted.
# Valid categories are ERROR, TRY_AGAIN, USER_INPUT, PERMISSION_DENIED, CONFIGURATION, CONNECTIVITY, SERVICE_DOWN, TRUNCATED, CONFLICT, CAPACITY, WARNING
# Default is USER_INPUT.
com.openexchange.log.suppressedCategories=USER_INPUT

# Specify the user name used for HTTP basic auth by internal REST servlet
#
# Both settings need to be set in order to have basic auth enabled - "com.openexchange.rest.services.basic-auth.login" and "com.openexchange.rest.services.basic-auth.password"
#
# Default is empty. Please change!
com.openexchange.rest.services.basic-auth.login=

# Specify the password used for HTTP basic auth by internal REST servlet
#
# Both settings need to be set in order to have basic auth enabled - "com.openexchange.rest.services.basic-auth.login" and "com.openexchange.rest.services.basic-auth.password"
#
# Default is empty. Please change!
com.openexchange.rest.services.basic-auth.password=

# The backend either delivers a thumbnail when it's available from cache or fails fast while initiating the thumbnail creation/caching in
# the background. The advantage is that clients aren't blocked and can simply retry later when the thumbnail can be delivered from cache.
#
# If there is no cache configured for the user/context:
#   - we either have to generate the thumbnail on the fly which has the potential to block the whole client by occupying the max number of
#     allowed connections to the domain
#   - or simply fail fast which leaves the client responsive but without thumbnails
#
# Default value is "false" to keep the client responsive.
com.openexchange.preview.thumbnail.blockingWorker=false

# Defines a hard limit when marshalling elements in WebDAV responses
# recursively. This applies to all WebDAV responses with a depth >= 1,
# including CardDAV and CalDAV. This setting is not meant as a quota
# restriction, instead it is meant to protect against possibly very large
# responses. Defaults to 250000, a value of 0 or smaller disables the
# limitation.
com.openexchange.webdav.recursiveMarshallingLimit=250000

# Specifies the max. size (in bytes) for an image that is allowed to be transformed
# If exceeded image transformation is rejected
#
# Default is 10485760 (10MB)
com.openexchange.tools.images.transformations.maxSize=10485760

# Specifies the max. resolution (in pixels) for an image that is allowed to be transformed
# If exceeded image transformation is rejected
#
# Default is 26824090 (~ 6048x4032 (24 megapixels) + 10%)
com.openexchange.tools.images.transformations.maxResolution=26824090

# Specifies the max. time (in seconds) to await an image transformation computation to complete.
# If exceeded image transformation is cancelled.
#
# Default is 10
com.openexchange.tools.images.transformations.waitTimeoutSeconds=10

# Configures up to which factor of the requested image's size an embedded 
# thumbnail may be used, even if this thumbnail's size does not strictly 
# fulfill the requested resolution. 
# For example, if a 200x150 preview is requested, and an embedded thumbnail
# is available with 160x120, and the factor is configured to 0.8, this
# thumbnail image will be used - while smaller ones won't. 
# A value of 1 only allows thumbnails if the requested preview size can be 
# fulfilled entirely; a negative value disables usage of embedded thumbnails.
#
# Defaults to 0.8. 
com.openexchange.tools.images.transformations.preferThumbnailThreshold=0.8

# Configures whether timezone definitions for interpreting iCalendar files 
# should be updated automatically from the internet or not. If disabled, a 
# static list of timezone defintions is used, otherwise, possibly updated 
# timezones are retrieved through tzurl.org upon first usage. 
# Defaults to "true".
com.openexchange.ical.updateTimezones=true
