# Configuration of the login

# Configures if some user is able to reenter his existing session after closing the browser tab or the complete browser. Setting this to
# true may be a security risk for clients running on unsafe computers. If this is configured to true, check that the parameter client
# contains the same identifier the UI sends as client parameter on normal login request. Otherwise the backend will not be able to
# rediscover the users session after closing the browser tab. This parameter only applies to the HTTP authorization header based login
# request.
com.openexchange.ajax.login.http-auth.autologin=false

# Every client tells the backend through the client parameter on the login request his identity. This is not possible when using the HTTP
# authorization header based login. So the client identifier for that request is defined here. It must be the same identifier that the web
# frontend uses, if you set com.openexchange.cookie.hash to calculate and want the previously configured autologin to work.
# Identifier for OX6 UI is: com.openexchange.ox.gui.dhtml
# Identifier for App Suite UI is: open-xchange-appsuite (which is the default)
com.openexchange.ajax.login.http-auth.client=open-xchange-appsuite

# The version of the client when using the HTTP Authorization Header based login. This should not be the normal web frontend version because
# a different version can be used to distinguish logins through HTTP authorization header and normal login request.
com.openexchange.ajax.login.http-auth.version=HTTP Auth

# Configures which error page should be used for the login. The error page is only applied for the HTML Form login and the HTTP
# Authorization Header login. All other login related requests provide normal JSON responses in error cases. The built-in error page shows
# the error message for 5 seconds and then redirects to the referrer page.
!com.openexchange.ajax.login.errorPageTemplate=

# Configures whether an insecure login is allowed. Meaning if local IP and/or user-agent strings are replaced in associated user session on
# login redirect or login redeem requests. To create a session from a server for some client you have to pass the clients IP address when
# creating the session.
# WARNING! Setting this parameter to true may result in users seeing a different users content if the infrastructure around OX does not work
# correctly.
com.openexchange.ajax.login.insecure=false

# This option has only an effect if com.openexchange.ajax.login.insecure is configured to true.
# This option allows to enable the IP check for /ajax/login?action=redirect requests. This request is mostly used to create a session
# without using the OX web UI login screen. The previous behavior allowed to change the IP for this request. Configure this option to false
# to have an IP check during this request. Additionally you can white list IP addresses from that an IP change is still allowed. This is
# useful if other systems in the infrastructure around OX want to create the session.
com.openexchange.ajax.login.redirect.changeIPAllowed=true

# The Random-Token is a one time token with a limited lifetime, which is used to initiate sessions through 3rd party applications or
# websites. It is a UUID, generated by the backend via default Java UUID implementation. This token is deprecated and disabled by default.
# Setting this to false will prevent a random token from being written as part of the login response and prevent logins via a random
# token.
com.openexchange.ajax.login.randomToken=false

# Checks if specified login string appears to be in ACE/puny-code notation (see RFC3490 section 4.1); e.g. "someone@xn--mller-kva.de". If
# set to "true" and ACE notation is detected, a failed login attempt is retried using IDN representation; e.g. "someone@m\u00fcller.de".
#
# Default is "false"
com.openexchange.ajax.login.checkPunyCodeLoginString=false

# Specifies the format for a logged login.
# Default format string "$login $ip $auth $agent $client $c $u $s"
#
# $s - session information
# $c - context information
# $u - user information
# $login - login string
# $ip - IP
# $auth - auth ID
# $agent - User-Agent
# $client - client identifier (and version)
# $iface - associated interface
#
# e.g. "$u - $c - $s - $agent - $client"
#
# Default is empty; meaning default format string.
com.openexchange.ajax.login.formatstring.login=

# Specifies the format for a logged logout.
# Default format string "Logout $c $u $s"
#
# $s - session information
# $c - context information
# $u - user information
#
# e.g. "$u - $c - $s"
#
# Default is empty; meaning default format string.
com.openexchange.ajax.login.formatstring.logout=

# Specify the rate limit' time window in which to track incoming login requests
#
# The general rate limiter behavior is specified in 'server.properties' file through "com.openexchange.servlet.maxRate*" properties.
#
# Default value is 300000 (5 minutes).
com.openexchange.ajax.login.maxRateTimeWindow=300000

# Specify the rate limit that applies to incoming login requests
#
# The precondition that a rate limit is applied to a login request is the a preceding login attempt failed due to invalid credentials.
# Once a successful login is performed, rate limit boundaries are dropped (but of course generic rate limit still applies)
#
# A client that exceeds that limit will receive a "429 Too Many Requests" HTTP error code
# That rate limit acts like a sliding window time frame; meaning that it considers only
# requests that fit into time windows specified through "com.openexchange.ajax.login.maxRateTimeWindow" from current time stamp:
# window-end := $now
# window-start := $window-end - $maxRateTimeWindow
#
# The general rate limiter behavior is specified in 'server.properties' file through "com.openexchange.servlet.maxRate*" properties.
#
# Default value is 50 login requests per $maxRateTimeWindow (default: 5 minutes).
com.openexchange.ajax.login.maxRate=50
