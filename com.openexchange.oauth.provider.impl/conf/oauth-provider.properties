# Set to 'true' to basically enable the OAuth 2.0 provider. This setting can then be overridden
# via config cascade to disallow granting access for certain users. If the provider is enabled,
# an encryption key (see below) must be set!
#
# Default: false
com.openexchange.oauth.provider.enabled=false

# Defines whether the enabled OAuth 2.0 provider does not only act as resource server but also
# as authorization server. If 'true' the following functionality will be provided:
#   * An authorization endpoint, token endpoint and revocation endpoint are made available via HTTP
#   * API calls for revoking access to external clients are made available, access can be revoked via
#     App Suite UI
#   * Provisioning interfaces to manage trusted clients are enabled
#
# If set to 'false' while the provider itself is enabled, a custom bridge to the external authorization
# server must be provided.
#
# Default: true
com.openexchange.oauth.provider.isAuthorizationServer=true

# Specify how authorization codes shall be stored, to enable OAuth in multi-node environments.
# Options are Hazelcast ('hz') or database ('db').
#
# Default: hz
com.openexchange.oauth.provider.authcode.type=hz

# The key to encrypt client secrets that are stored within the database.
# A value must be set to enable the registration of OAuth 2.0 client
# applications. It must be the same on every node. After the first client
# has been registered, the key must not be changed anymore.
# Default: <empty>
com.openexchange.oauth.provider.encryptionKey=
